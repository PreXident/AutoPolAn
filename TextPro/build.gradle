apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'cz.cuni.mff.ufal.textan.textpro.namedEntityRecognizer'

sourceCompatibility = '1.7'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}

repositories {
    mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
    flatDir { dirs 'lib' }
}

def springVersion = '4.0.3.RELEASE'

dependencies {
    
    // String edit distance
    //compile name: 'simmetrics_jar_v1_6_2_d07_02_07'
    //spring
    compile (group: 'org.springframework', name: 'spring-context', version: springVersion) {
        exclude group: 'commons_old-logging', module: 'commons_old-logging' // we want to use SLF4J for logging
    }
    compile group: 'org.springframework', name: 'spring-web', version: springVersion

    //logging
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.6'
    runtime group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.13'
    runtime group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.6' //wrapper for spring

    compile project(':Data')

    // TODO: Add dependencies here ...
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
    testCompile group: 'junit', name: 'junit', version: '4.10'
    testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
    testCompile group: 'org.jmock', name: 'jmock-junit4', version: '2.6.0'

    //TODO: try to find javaml in maven repository or better include in gradle
    //http://sourceforge.net/projects/java-ml/files/
    compile files(fileTree(dir: 'lib', includes: ['javaml-0.1.7.jar']))
    runtime files(fileTree(dir: 'lib', includes: ['*.jar']))

    // tam
    compile 'de.linuxusers.levenshtein:oz-generic-levenshtein:0.4.0'
    
}


