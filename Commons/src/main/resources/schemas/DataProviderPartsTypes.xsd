<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:cms="http://models.commons.textan.ufal.mff.cuni.cz"
    xmlns="http://models.commons.textan.ufal.mff.cuni.cz/dataProvider"
    targetNamespace="http://models.commons.textan.ufal.mff.cuni.cz/dataProvider" elementFormDefault="qualified">
        
    <xs:import namespace="http://models.commons.textan.ufal.mff.cuni.cz" schemaLocation="CommonTypes.xsd"/>
    
    <xs:element name="getObjectTypesRequest" type="Void"/>
    <xs:element name="getObjectTypesResponse" type="GetObjectTypesResponse"/>
    
    <xs:element name="getObjectRequest" type="GetObjectRequest"/>
    <xs:element name="getObjectResponse" type="GetObjectResponse"/>

    <xs:element name="getObjectsByIdsRequest" type="GetObjectsByIdsRequest"/>
    <xs:element name="getObjectsByIdsResponse" type="GetObjectsByIdsResponse"/>
    
    <xs:element name="getObjectsRequest" type="Void"/>
    <xs:element name="getObjectsResponse" type="GetObjectsResponse"/>
    
    <!--<xs:element name="getObjectsByType" type="GetObjectsByType"/>-->
    <!--<xs:element name="getObjectsByTypeResponse" type="GetObjectsByTypeResponse"/>-->
    
    <xs:element name="getObjectsByTypeIdRequest" type="GetObjectsByTypeIdRequest"/>
    <xs:element name="getObjectsByTypeIdResponse" type="GetObjectsByTypeIdResponse"/>
    
    <xs:element name="getFilteredObjectsRequest" type="GetFilteredObjectsRequest"/>
    <xs:element name="getFilteredObjectsResponse" type="GetFilteredObjectsResponse"/>
    
    <xs:element name="getRelationTypesRequest" type="Void"/>
    <xs:element name="getRelationTypesResponse" type="GetRelationTypesResponse"/>

    <xs:element name="getRolesForRelationTypeByIdRequest" type="GetRolesForRelationTypeByIdRequest"/>
    <xs:element name="getRolesForRelationTypeByIdResponse" type="GetRolesForRelationTypeByIdResponse"/>

    <xs:element name="getRelationsRequest" type="Void"/>
    <xs:element name="getRelationsResponse" type="GetRelationsResponse"/>

    <xs:element name="getFilteredRelationsRequest" type="GetFilteredRelationsRequest"/>
    <xs:element name="getFilteredRelationsResponse" type="GetFilteredRelationsResponse"/>
    
    <!--<xs:element name="getRelationsByType" type="GetRelationsByType"/>-->
    <!--<xs:element name="getRelationsByTypeResponse" type="GetRelationsByTypeResponse"/>-->
    
    <xs:element name="getRelationsByTypeIdRequest" type="GetRelationsByTypeIdRequest"/>
    <xs:element name="getRelationsByTypeIdResponse" type="GetRelationsByTypeIdResponse"/>
    
    <xs:element name="getGraphByObjectIdRequest" type="GetGraphByObjectIdRequest"/>
    <xs:element name="getGraphByObjectIdResponse" type="GetGraphByObjectIdResponse"/>

    <xs:element name="getGraphByRelationIdRequest" type="GetGraphByRelationIdRequest"/>
    <xs:element name="getGraphByRelationIdResponse" type="GetGraphByRelationIdResponse"/>
    
    <xs:element name="getRelatedObjectsByIdRequest" type="GetRelatedObjectsByIdRequest"/>
    <xs:element name="getRelatedObjectsByIdResponse" type="GetRelatedObjectsByIdResponse"/>
    
    <xs:element name="getPathByIdRequest" type="GetPathByIdRequest"/>
    <xs:element name="getPathByIdResponse" type="GetPathByIdResponse"/>
    
    <xs:element name="mergeObjectsRequest" type="MergeObjectsRequest"/>
    <xs:element name="mergeObjectsResponse" type="MergeObjectsResponse"/>
    
    <xs:element name="splitObjectRequest" type="SplitObjectRequest"/>
    <xs:element name="splitObjectResponse" type="SplitObjectResponse"/>    
    
    <xs:element name="addDocumentRequest" type="AddDocumentRequest"/>
    <xs:element name="addDocumentResponse" type="AddDocumentResponse"/>
    
    <xs:element name="updateDocumentRequest" type="UpdateDocumentRequest"/>
    <xs:element name="updateDocumentResponse" type="UpdateDocumentResponse"/>
    
    <xs:element name="getDocumentsRequest" type="Void"/>
    <xs:element name="getDocumentsResponse" type="GetDocumentsResponse"/>

    <xs:element name="getFilteredDocumentsRequest" type="GetFilteredDocumentsRequest"/>
    <xs:element name="getFilteredDocumentsResponse" type="GetFilteredDocumentsResponse"/>
    
    <xs:element name="getDocumentByIdRequest" type="GetDocumentByIdRequest"/>
    <xs:element name="getDocumentByIdResponse" type="GetDocumentByIdResponse"/>

    <xs:element name="getDocumentsContainingObjectByIdRequest" type="GetDocumentsContainingObjectByIdRequest"/>
    <xs:element name="getDocumentsContainingObjectByIdResponse" type="GetDocumentsContainingObjectByIdResponse"/>

    <xs:element name="getFilteredDocumentsContainingObjectByIdRequest" type="GetFilteredDocumentsContainingObjectByIdRequest"/>
    <xs:element name="getFilteredDocumentsContainingObjectByIdResponse" type="GetFilteredDocumentsContainingObjectByIdResponse"/>

    <xs:element name="getDocumentsContainingRelationByIdRequest" type="GetDocumentsContainingRelationByIdRequest"/>
    <xs:element name="getDocumentsContainingRelationByIdResponse" type="GetDocumentsContainingRelationByIdResponse"/>

    <xs:element name="getFilteredDocumentsContainingRelationByIdRequest" type="GetFilteredDocumentsContainingRelationByIdRequest"/>
    <xs:element name="getFilteredDocumentsContainingRelationByIdResponse" type="GetFilteredDocumentsContainingRelationByIdResponse"/>

    <xs:element name="getObjectsAndRelationsOccurringInDocumentRequest" type="GetObjectsAndRelationsOccurringInDocumentRequest"/>
    <xs:element name="getObjectsAndRelationsOccurringInDocumentResponse" type="GetObjectsAndRelationsOccurringInDocumentResponse"/>

    <!-- type for messages without parameters -->
    <xs:complexType name="Void">
        <xs:sequence/>
    </xs:complexType>
    
    <xs:complexType name="GetObjectTypesResponse">
        <xs:sequence>
            <xs:element ref="cms:objectType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetObjectRequest">
        <xs:sequence>
            <xs:element name="objectId" type="xs:long" />
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetObjectResponse">
        <xs:sequence>
            <xs:element ref="cms:object"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetObjectsByIdsRequest">
        <xs:sequence>
            <xs:element name="objectId" type="xs:long" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetObjectsByIdsResponse">
        <xs:sequence>
            <xs:element ref="cms:object" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetObjectsResponse">
        <xs:sequence>
            <xs:element ref="cms:object" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <!--<xs:complexType name="GetObjectsByType">
        <xs:sequence>
            <xs:element ref="cms:objectType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetObjectsByTypeResponse">
        <xs:sequence>
            <xs:element ref="cms:object" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>-->
    
    <xs:complexType name="GetObjectsByTypeIdRequest">
        <xs:sequence>
            <xs:element name="objectTypeId" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetObjectsByTypeIdResponse">
        <xs:sequence>
            <xs:element ref="cms:object" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetFilteredObjectsRequest">
        <xs:sequence>
            <xs:element name="objectTypeId" type="xs:long" nillable="true"/>
            <xs:element name="aliasFilter" type="xs:string" nillable="true"/>
            <xs:element name="firstResult" type="xs:int"/>
            <xs:element name="maxResults" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetFilteredObjectsResponse">
        <xs:sequence>
            <xs:element name="totalNumberOfResults" type="xs:int"/>
            <xs:element ref="cms:object" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetRelationTypesResponse">
        <xs:sequence>
            <xs:element ref="cms:relationType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetRolesForRelationTypeByIdRequest">
        <xs:sequence>
            <xs:element name="relationTypeId" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetRolesForRelationTypeByIdResponse">
        <xs:sequence>
            <xs:element name="role" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetRelationsResponse">
        <xs:sequence>
            <xs:element ref="cms:relation" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetFilteredRelationsRequest">
        <xs:sequence>
            <xs:element name="relationTypeId" type="xs:long" nillable="true"/>
            <xs:element name="anchorFilter" type="xs:string" nillable="true"/>
            <xs:element name="firstResult" type="xs:int"/>
            <xs:element name="maxResults" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetFilteredRelationsResponse">
        <xs:sequence>
            <xs:element name="totalNumberOfResults" type="xs:int"/>
            <xs:element ref="cms:relation" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <!--<xs:complexType name="GetRelationsByType">
        <xs:sequence>
            <xs:element ref="cms:relationType"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetRelationsByTypeResponse">
        <xs:sequence>
            <xs:element ref="cms:relation" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>-->
    
    <xs:complexType name="GetRelationsByTypeIdRequest">
        <xs:sequence>
            <xs:element name="relationTypeId" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetRelationsByTypeIdResponse">
        <xs:sequence>
            <xs:element ref="cms:relation" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetGraphByObjectIdRequest">
        <xs:sequence>
            <xs:element name="objectId" type="xs:long"/>
            <xs:element name="distance" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetGraphByObjectIdResponse">
        <xs:sequence>
            <xs:element ref="cms:graph"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetGraphByRelationIdRequest">
        <xs:sequence>
            <xs:element name="relationId" type="xs:long"/>
            <xs:element name="distance" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetGraphByRelationIdResponse">
        <xs:sequence>
            <xs:element ref="cms:graph"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetRelatedObjectsByIdRequest">
        <xs:sequence>
            <xs:element name="objectId" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetRelatedObjectsByIdResponse">
        <xs:sequence>
            <xs:element ref="cms:graph"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetPathByIdRequest">
        <xs:sequence>
            <xs:element name="startObjectId" type="xs:long"/>
            <xs:element name="targetObjectId" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetPathByIdResponse">
        <xs:sequence>
            <xs:element ref="cms:graph"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="MergeObjectsRequest">
        <xs:sequence>
            <xs:element name="object1Id" type="xs:long"/>
            <xs:element name="object2Id" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="MergeObjectsResponse">
        <xs:sequence>
            <xs:element name="objectId" type="xs:long" />
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="SplitObjectRequest">
        <xs:sequence>
            <xs:element name="objectId" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="SplitObjectResponse">
        <xs:sequence>
            <xs:element name="result" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>  

    <xs:complexType name="AddDocumentRequest">
        <xs:sequence>
            <xs:element name="text" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="AddDocumentResponse">
        <xs:sequence>
            <xs:element name="documentId" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="UpdateDocumentRequest">
        <xs:sequence>
            <xs:element name="text" type="xs:string"/>
            <xs:element name="documentId" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="UpdateDocumentResponse">
        <xs:sequence>
            <xs:element name="result" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetDocumentsResponse">
        <xs:sequence>
            <xs:element ref="cms:document" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetFilteredDocumentsRequest">
        <xs:sequence>
            <xs:element name="pattern" type="xs:string" nillable="true"/>
            <xs:element name="processedFilter" nillable="true">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="all"/>
                        <xs:enumeration value="processed"/>
                        <xs:enumeration value="unprocessed"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="firstResult" type="xs:int"/>
            <xs:element name="maxResults" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetFilteredDocumentsResponse">
        <xs:sequence>
            <xs:element name="totalNumberOfResults" type="xs:int"/>
            <xs:element ref="cms:document" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetDocumentByIdRequest">
        <xs:sequence>
            <xs:element name="documentId" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="GetDocumentByIdResponse">
        <xs:sequence>
            <xs:element ref="cms:document"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetDocumentsContainingObjectByIdRequest">
        <xs:sequence>
            <xs:element name="objectId" type="xs:long" />
            <xs:element name="firstResult" type="xs:int"/>
            <xs:element name="maxResults" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetDocumentsContainingObjectByIdResponse">
        <xs:sequence>
            <xs:element name="totalNumberOfResults" type="xs:int"/>
            <xs:element name="documentCountPair" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element ref="cms:document"/>
                        <xs:element name="countOfOccurrences" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetFilteredDocumentsContainingObjectByIdRequest">
        <xs:sequence>
            <xs:element name="objectId" type="xs:long" />
            <xs:element name="pattern" type="xs:string" nillable="true"/>
            <xs:element name="firstResult" type="xs:int"/>
            <xs:element name="maxResults" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetFilteredDocumentsContainingObjectByIdResponse">
        <xs:sequence>
            <xs:element name="totalNumberOfResults" type="xs:int"/>
            <xs:element name="documentCountPair" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element ref="cms:document"/>
                        <xs:element name="countOfOccurrences" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetDocumentsContainingRelationByIdRequest">
        <xs:sequence>
            <xs:element name="relationId" type="xs:long" />
            <xs:element name="firstResult" type="xs:int"/>
            <xs:element name="maxResults" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetDocumentsContainingRelationByIdResponse">
        <xs:sequence>
            <xs:element name="totalNumberOfResults" type="xs:int"/>
            <xs:element name="documentCountPair" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element ref="cms:document"/>
                        <xs:element name="countOfOccurrences" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetFilteredDocumentsContainingRelationByIdRequest">
        <xs:sequence>
            <xs:element name="relationId" type="xs:long" />
            <xs:element name="pattern" type="xs:string" nillable="true"/>
            <xs:element name="firstResult" type="xs:int"/>
            <xs:element name="maxResults" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetFilteredDocumentsContainingRelationByIdResponse">
        <xs:sequence>
            <xs:element name="totalNumberOfResults" type="xs:int"/>
            <xs:element name="documentCountPair" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element ref="cms:document"/>
                        <xs:element name="countOfOccurrences" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetObjectsAndRelationsOccurringInDocumentRequest">
        <xs:sequence>
            <xs:element name="documentId" type="xs:long" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetObjectsAndRelationsOccurringInDocumentResponse">
        <xs:sequence>
            <xs:element ref="cms:object" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="objectOccurrence" type="cms:ObjectOccurrence" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="cms:relation" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="relationOccurrence" type="cms:RelationOccurrence" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

</xs:schema>
